# Prometheus Configuration for Dinner First Monitoring
# Comprehensive monitoring setup for dating platform

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'dinner_first-production'
    environment: 'production'

# Rules for alerting
rule_files:
  - "alert_rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Dinner First Backend API
  - job_name: 'dinner_first-backend'
    metrics_path: '/api/v1/metrics/prometheus'
    scrape_interval: 30s
    static_configs:
      - targets: ['backend:8000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-backend'

  # Dinner First Frontend (if serving metrics)
  - job_name: 'dinner_first-frontend'
    metrics_path: '/metrics'
    scrape_interval: 60s
    static_configs:
      - targets: ['frontend:80']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-frontend'

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-postgres'

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-redis'

  # Node Exporter (System Metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-server'

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-nginx'

  # Container Metrics (cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dinner_first-containers'

  # Blackbox Exporter for URL monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://dinner_first.com
        - https://api.dinner_first.com/health
        - https://api.dinner_first.com/api/v1/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom Business Metrics
  - job_name: 'dinner_first-business-metrics'
    metrics_path: '/api/v1/metrics'
    scrape_interval: 60s
    static_configs:
      - targets: ['backend:8000']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'dinner_first_business_.*'
        target_label: __name__
        replacement: '${1}'

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.dinner_first.com/api/v1/write"
    basic_auth:
      username: prometheus
      password: your_remote_write_password
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 50GB
    wal-compression: true