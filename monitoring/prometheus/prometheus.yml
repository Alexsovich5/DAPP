# Prometheus Configuration for Dinner First Dating Platform CI/CD Environment
# Comprehensive monitoring setup for all infrastructure components

global:
  scrape_interval: 30s
  evaluation_interval: 30s
  scrape_timeout: 10s
  external_labels:
    cluster: 'dinner_first-cicd'
    environment: 'production'

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 15s

  # GitLab CE monitoring
  - job_name: 'gitlab-ce'
    static_configs:
      - targets: ['gitlab-ce:8090']
    metrics_path: /-/metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      token: ['prometheus_token']

  # GitLab Runner monitoring
  - job_name: 'gitlab-runner'
    static_configs:
      - targets: ['gitlab-runner:9252']
    metrics_path: /metrics
    scrape_interval: 15s

  # Jenkins monitoring
  - job_name: 'jenkins'
    static_configs:
      - targets: ['jenkins-master:8084']
    metrics_path: /prometheus
    scrape_interval: 30s

  # SonarQube monitoring
  - job_name: 'sonarqube'
    static_configs:
      - targets: ['sonarqube-ce:9000']
    metrics_path: /api/monitoring/metrics
    scrape_interval: 60s
    honor_labels: true

  # Nexus Repository monitoring
  - job_name: 'nexus'
    static_configs:
      - targets: ['nexus-repository:8081']
    metrics_path: /service/metrics/prometheus
    scrape_interval: 30s

  # HashiCorp Vault monitoring
  - job_name: 'vault'
    static_configs:
      - targets: ['vault-secrets:8200']
    metrics_path: /v1/sys/metrics
    params:
      format: ['prometheus']
    scrape_interval: 30s
    bearer_token: 'vault_prometheus_token'

  # OWASP ZAP monitoring
  - job_name: 'owasp-zap'
    static_configs:
      - targets: ['owasp-zap:8080']
    metrics_path: /JSON/stats/view/stats/
    scrape_interval: 60s

  # PostgreSQL monitoring (SonarQube DB)
  - job_name: 'postgresql-sonarqube'
    static_configs:
      - targets: ['sonarqube-postgres:5432']
    scrape_interval: 30s

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-cache:6379']
    scrape_interval: 15s

  # MinIO monitoring
  - job_name: 'minio'
    static_configs:
      - targets: ['minio-storage:9000']
    metrics_path: /minio/v2/metrics/cluster
    scrape_interval: 30s

  # Traefik monitoring
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik-proxy:8083']
    metrics_path: /metrics
    scrape_interval: 15s

  # Portainer monitoring
  - job_name: 'portainer'
    static_configs:
      - targets: ['portainer-docker-mgmt:9443']
    metrics_path: /api/system/status
    scrape_interval: 60s
    scheme: https
    tls_config:
      insecure_skip_verify: true

  # Grafana monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana-monitoring:3000']
    metrics_path: /metrics
    scrape_interval: 30s

  # Docker daemon monitoring (if exposed)
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-host:9323']
    scrape_interval: 30s

  # Node Exporter (for host metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # cAdvisor (for container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s

  # Application monitoring - Dinner First Frontend
  - job_name: 'dinner_first-frontend'
    static_configs:
      - targets: ['dinner_first-frontend:80']
    metrics_path: /metrics
    scrape_interval: 30s
    honor_labels: true

  # Application monitoring - Dinner First Backend
  - job_name: 'dinner_first-backend'
    static_configs:
      - targets: ['dinner_first-backend:8000']
    metrics_path: /metrics
    scrape_interval: 15s
    honor_labels: true

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://gitlab-ce:8090
        - http://jenkins-master:8084
        - http://sonarqube-ce:9000
        - http://nexus-repository:8081
        - http://grafana-monitoring:3000
        - https://dinner_first.app
        - https://staging.dinner_first.app
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom CI/CD pipeline metrics
  - job_name: 'pipeline-metrics'
    honor_timestamps: true
    scrape_interval: 60s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets: ['pipeline-metrics-exporter:8080']

  # Database monitoring for application
  - job_name: 'dinner_first-postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # MongoDB monitoring (if used for analytics)
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 30s

# Scrape config for Kubernetes service discovery (if migrating to K8s)
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #   - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #     action: keep
  #     regex: default;kubernetes;https

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://minio-storage:9000/prometheus"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: prometheus_.*
        action: drop

# Remote read configuration
remote_read:
  - url: "http://minio-storage:9000/prometheus"
    read_recent: true

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
    min-block-duration: 2h
    max-block-duration: 25h

# Web configuration
web:
  console.templates: /etc/prometheus/consoles
  console.libraries: /etc/prometheus/console_libraries
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512