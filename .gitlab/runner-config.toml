# GitLab Runner Configuration for Dinner1 CI/CD
# Optimized for Docker-based builds and deployments

concurrent = 4
check_interval = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "dinner1-docker-runner"
  url = "http://gitlab-ce:8090/"
  token = "GITLAB_RUNNER_TOKEN_TO_BE_REPLACED"
  executor = "docker"
  environment = ["DOCKER_DRIVER=overlay2", "DOCKER_TLS_CERTDIR=/certs"]
  
  [runners.custom_build_dir]
  
  [runners.cache]
    Type = "s3"
    ServerAddress = "minio-storage:9000"
    AccessKey = "MINIO_ACCESS_KEY"
    SecretKey = "MINIO_SECRET_KEY"
    BucketName = "gitlab-runner-cache"
    Insecure = true
    
  [runners.docker]
    tls_verify = false
    image = "docker:latest"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/certs/client",
      "/cache",
      "/var/run/docker.sock:/var/run/docker.sock"
    ]
    shm_size = 0
    network_mode = "cicd_network"
    
    # Service containers for testing
    services = [
      "docker:dind",
      "postgres:15-alpine",
      "redis:7-alpine"
    ]
    
    # Pull policy
    pull_policy = ["if-not-present", "always"]
    
    # Resource limits
    memory = "2g"
    memory_swap = "4g"
    memory_reservation = "1g"
    cpus = "2"
    
    # Security settings
    security_opt = ["seccomp:unconfined"]
    
    # Additional configurations
    extra_hosts = [
      "gitlab-ce:172.18.0.10",
      "nexus-repository:172.18.0.11",
      "sonarqube-ce:172.18.0.12",
      "vault-secrets:172.18.0.13",
      "minio-storage:172.18.0.14",
      "redis-cache:172.18.0.15"
    ]

[[runners]]
  name = "dinner1-shell-runner"
  url = "http://gitlab-ce:8090/"
  token = "GITLAB_RUNNER_TOKEN_TO_BE_REPLACED"
  executor = "shell"
  shell = "bash"
  
  [runners.cache]
    Type = "s3"
    ServerAddress = "minio-storage:9000"
    AccessKey = "MINIO_ACCESS_KEY"
    SecretKey = "MINIO_SECRET_KEY"
    BucketName = "gitlab-runner-cache"
    Insecure = true

[[runners]]
  name = "dinner1-kubernetes-runner"
  url = "http://gitlab-ce:8090/"
  token = "GITLAB_RUNNER_TOKEN_TO_BE_REPLACED"
  executor = "kubernetes"
  
  [runners.kubernetes]
    host = ""
    namespace = "gitlab-runner"
    namespace_overwrite_allowed = "gitlab-runner-.*"
    
    # Pod configuration
    image = "ubuntu:22.04"
    memory_limit = "2Gi"
    memory_request = "1Gi"
    cpu_limit = "2"
    cpu_request = "1"
    service_cpu_limit = "1"
    service_cpu_request = "500m"
    service_memory_limit = "1Gi"
    service_memory_request = "512Mi"
    helper_cpu_limit = "500m"
    helper_cpu_request = "100m"
    helper_memory_limit = "512Mi"
    helper_memory_request = "128Mi"
    
    # Node selection
    node_selector = {
      "node-type" = "gitlab-runner"
    }
    
    # Pod security
    run_as_user = 1000
    run_as_group = 1000
    fs_group = 2000
    
    # Services
    [[runners.kubernetes.services]]
      name = "docker"
      image = "docker:dind"
      privileged = true
      command = ["dockerd-entrypoint.sh"]
      
    [[runners.kubernetes.services]]
      name = "postgres"
      image = "postgres:15-alpine"
      environment = [
        "POSTGRES_DB=test",
        "POSTGRES_USER=test",
        "POSTGRES_PASSWORD=test"
      ]
      
    [[runners.kubernetes.services]]
      name = "redis"
      image = "redis:7-alpine"
    
    # Volumes
    [[runners.kubernetes.volumes.empty_dir]]
      name = "docker-certs"
      mount_path = "/certs/client"
      medium = "Memory"
      
    [[runners.kubernetes.volumes.host_path]]
      name = "docker-sock"
      mount_path = "/var/run/docker.sock"
      host_path = "/var/run/docker.sock"

[[runners]]
  name = "dinner1-performance-runner"
  url = "http://gitlab-ce:8090/"
  token = "GITLAB_RUNNER_TOKEN_TO_BE_REPLACED"
  executor = "docker"
  
  [runners.docker]
    tls_verify = false
    image = "node:20-alpine"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache"]
    shm_size = 2147483648  # 2GB for browser testing
    
    # Optimized for performance testing
    memory = "4g"
    memory_swap = "6g"
    cpus = "4"
    
    # Browser dependencies
    services = ["selenium/standalone-chrome:latest"]

# Global runner settings
log_level = "info"
log_format = "json"

# Metrics and monitoring
listen_address = ":9252"
metrics_server = ":9252"

# Sentry error reporting (optional)
# sentry_dsn = "https://your-sentry-dsn"

# Feature flags
[runners.feature_flags]
  FF_NETWORK_PER_BUILD = true
  FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY = false
  FF_USE_DIRECT_DOWNLOAD = true
  FF_SKIP_NOOP_BUILD_STAGES = true
  FF_USE_FASTZIP = true