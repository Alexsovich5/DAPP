# Nginx API Gateway Configuration for Dinner First Microservices
# Phase 5: Advanced Features & Scale

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=ai_matching:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=messaging:10m rate=20r/s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:;" always;

    # Upstream servers
    upstream auth_service {
        least_conn;
        server auth-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream matching_service {
        least_conn;
        server matching-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream messaging_service {
        least_conn;
        server messaging-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream notification_service {
        least_conn;
        server notification-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream safety_service {
        least_conn;
        server safety-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream profile_service {
        least_conn;
        server profile-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Main server block
    server {
        listen 80;
        server_name dinner-first.local localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Gateway healthy\n";
            add_header Content-Type text/plain;
        }

        # API Documentation
        location /docs {
            return 302 https://docs.dinner-first.com;
        }

        # Authentication Service
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeout settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Connection settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Profile Service
        location /api/v1/profiles/ {
            limit_req zone=general burst=15 nodelay;
            
            proxy_pass http://profile_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # AI Matching Service
        location /api/v1/ai-matching/ {
            limit_req zone=ai_matching burst=5 nodelay;
            
            proxy_pass http://matching_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Longer timeouts for AI processing
            proxy_connect_timeout 15s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Messaging Service
        location /api/v1/messages/ {
            limit_req zone=messaging burst=30 nodelay;
            
            proxy_pass http://messaging_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # WebSocket for real-time messaging
        location /ws/ {
            proxy_pass http://messaging_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Notification Service
        location /api/v1/notifications/ {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Safety Service
        location /api/v1/safety/ {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://safety_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 45s;
            proxy_read_timeout 45s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Analytics Service  
        location /api/v1/analytics/ {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://analytics_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Static file serving for uploads
        location /uploads/ {
            alias /var/www/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Security for user uploads
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Service monitoring endpoints (internal only)
        location ~ ^/internal/(auth|matching|messaging|notification|safety|analytics|profile)/health$ {
            internal;
            
            set $service_name "";
            if ($uri ~ ^/internal/([^/]+)/health$) {
                set $service_name $1;
            }
            
            proxy_pass http://${service_name}_service/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Default location for unmatched requests
        location / {
            return 404 '{"error": "Endpoint not found", "message": "Please check the API documentation"}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server block (for production with SSL)
    server {
        listen 443 ssl http2;
        server_name dinner-first.app www.dinner-first.app;

        # SSL configuration
        ssl_certificate /etc/ssl/dinner-first.crt;
        ssl_certificate_key /etc/ssl/dinner-first.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include all the same location blocks as the HTTP server
        include /etc/nginx/conf.d/api-locations.conf;
    }

    # Monitoring server for internal metrics
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }
        
        location /health {
            access_log off;
            return 200 "Gateway monitoring healthy\n";
            add_header Content-Type text/plain;
        }
    }
}