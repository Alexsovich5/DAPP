"""Add revelation system tables

Revision ID: eb1f6896899f
Revises: a71565ed9c0c
Create Date: 2025-08-08 10:13:01.718661

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eb1f6896899f'
down_revision = 'a71565ed9c0c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('matches', sa.Column('sender_id', sa.Integer(), nullable=True))
    op.add_column('matches', sa.Column('receiver_id', sa.Integer(), nullable=True))
    op.alter_column('matches', 'status',
               existing_type=postgresql.ENUM('pending', 'accepted', 'rejected', 'cancelled', name='matchstatus'),
               type_=sa.String(),
               nullable=True)
    op.alter_column('matches', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('matches', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_matches_id'), 'matches', ['id'], unique=False)
    op.drop_constraint(op.f('matches_initiator_id_fkey'), 'matches', type_='foreignkey')
    op.drop_constraint(op.f('matches_recipient_id_fkey'), 'matches', type_='foreignkey')
    op.create_foreign_key(None, 'matches', 'users', ['sender_id'], ['id'])
    op.create_foreign_key(None, 'matches', 'users', ['receiver_id'], ['id'])
    op.drop_column('matches', 'initiator_id')
    op.drop_column('matches', 'recipient_id')
    op.add_column('profiles', sa.Column('is_verified', sa.Boolean(), nullable=True))
    op.alter_column('profiles', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('profiles', 'bio',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
    # Fix PostgreSQL type conversion for favorite_cuisines
    op.execute("ALTER TABLE profiles ALTER COLUMN favorite_cuisines TYPE JSON USING favorite_cuisines::JSON")
    op.alter_column('profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id'], unique=False)
    op.drop_column('profiles', 'verification_document_url')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('profiles', sa.Column('verification_document_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.alter_column('profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # Fix PostgreSQL type conversion back to VARCHAR
    op.execute("ALTER TABLE profiles ALTER COLUMN favorite_cuisines TYPE VARCHAR USING favorite_cuisines::TEXT")
    op.alter_column('profiles', 'bio',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('profiles', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('profiles', 'is_verified')
    op.add_column('matches', sa.Column('recipient_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('matches', sa.Column('initiator_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.create_foreign_key(op.f('matches_recipient_id_fkey'), 'matches', 'users', ['recipient_id'], ['id'])
    op.create_foreign_key(op.f('matches_initiator_id_fkey'), 'matches', 'users', ['initiator_id'], ['id'])
    op.drop_index(op.f('ix_matches_id'), table_name='matches')
    op.alter_column('matches', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('matches', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('matches', 'status',
               existing_type=sa.String(),
               type_=postgresql.ENUM('pending', 'accepted', 'rejected', 'cancelled', name='matchstatus'),
               nullable=False)
    op.drop_column('matches', 'receiver_id')
    op.drop_column('matches', 'sender_id')
    # ### end Alembic commands ###

