# SonarQube Configuration for Dinner First Dating Platform
# Configuration for code quality analysis using SonarQube Community Edition

# Project Information
sonar.projectKey=dinner-first-dating-platform
sonar.projectName=Dinner First: Soul Before Skin Dating Platform
sonar.projectVersion=1.0
sonar.projectDescription=Revolutionary dating platform prioritizing emotional connection through progressive revelation

# Source Code Configuration
sonar.sources=.
sonar.sourceEncoding=UTF-8

# Exclusions - Files and directories to exclude from analysis
sonar.exclusions=**/node_modules/**,\
  **/dist/**,\
  **/coverage/**,\
  **/build/**,\
  **/*.min.js,\
  **/*.min.css,\
  **/vendor/**,\
  **/.angular/**,\
  **/.next/**,\
  **/.nuxt/**,\
  **/public/**,\
  **/static/**,\
  **/.venv/**,\
  **/venv/**,\
  **/__pycache__/**,\
  **/htmlcov/**,\
  **/test-results/**,\
  **/playwright-report/**,\
  **/artifacts/**,\
  **/*.log,\
  **/.env*,\
  **/docker-compose*.yml,\
  **/Dockerfile*,\
  **/.git/**,\
  **/.gitlab/**,\
  **/terraform/**/*.tfstate*,\
  **/helm/**,\
  **/monitoring/**

# Test Configuration
sonar.tests=angular-frontend/src,python-backend/tests
sonar.test.inclusions=**/*.spec.ts,\
  **/*.spec.js,\
  **/*.test.ts,\
  **/*.test.js,\
  **/test_*.py,\
  **/*_test.py,\
  **/tests/**/*.py

# Language-specific Configuration

# TypeScript/Angular Configuration
sonar.typescript.node=node
sonar.typescript.lcov.reportPaths=angular-frontend/coverage/lcov.info
sonar.javascript.lcov.reportPaths=angular-frontend/coverage/lcov.info
sonar.typescript.tsconfigPath=angular-frontend/tsconfig.json

# Python Configuration
sonar.python.coverage.reportPaths=python-backend/coverage.xml
sonar.python.version=3.11
sonar.python.xunit.reportPath=python-backend/test-results.xml

# Coverage Configuration
sonar.coverage.exclusions=**/*.spec.ts,\
  **/*.spec.js,\
  **/*.test.ts,\
  **/*.test.js,\
  **/test_*.py,\
  **/*_test.py,\
  **/tests/**/*.py,\
  **/src/test/**,\
  **/src/tests/**,\
  **/e2e/**,\
  **/*.mock.ts,\
  **/*.mock.js,\
  **/mocks/**,\
  **/stubs/**,\
  **/*.config.ts,\
  **/*.config.js,\
  **/environment*.ts,\
  **/main.ts,\
  **/polyfills.ts,\
  **/test.ts

# Duplication Configuration
sonar.cpd.exclusions=**/*.spec.ts,\
  **/*.spec.js,\
  **/*.test.ts,\
  **/*.test.js,\
  **/test_*.py,\
  **/*_test.py,\
  **/migrations/**/*.py,\
  **/models/**/*.py,\
  **/schemas/**/*.py

# Quality Gate Configuration
sonar.qualitygate.wait=true

# Issues Configuration
sonar.issue.ignore.multicriteria=e1,e2,e3,e4,e5

# Rule: Ignore TODO comments in development
sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S1135
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts

# Rule: Ignore console.log in development files
sonar.issue.ignore.multicriteria.e2.ruleKey=typescript:S2228
sonar.issue.ignore.multicriteria.e2.resourceKey=**/src/environments/**

# Rule: Ignore magic numbers in configuration files
sonar.issue.ignore.multicriteria.e3.ruleKey=typescript:S109
sonar.issue.ignore.multicriteria.e3.resourceKey=**/config/**

# Rule: Ignore unused imports in test files
sonar.issue.ignore.multicriteria.e4.ruleKey=typescript:S1128
sonar.issue.ignore.multicriteria.e4.resourceKey=**/*.spec.ts

# Rule: Ignore cognitive complexity in test files
sonar.issue.ignore.multicriteria.e5.ruleKey=python:S3776
sonar.issue.ignore.multicriteria.e5.resourceKey=**/tests/**

# Security Configuration
sonar.security.hotspots.inheritFromParent=true

# Dating Platform Specific Quality Rules

# Angular/TypeScript Rules
sonar.typescript.file.suffixes=.ts,.tsx
sonar.javascript.file.suffixes=.js,.jsx

# Python Rules
sonar.python.file.suffixes=.py

# Performance and Maintainability Thresholds
sonar.issue.ignore.block=e6,e7,e8

# Allow higher complexity for service classes in dating features
sonar.issue.ignore.block.e6.beginBlockRegexp=class.*Service
sonar.issue.ignore.block.e6.endBlockRegexp=}
sonar.issue.ignore.block.e6.ruleKey=typescript:S1541

# Allow longer functions for complex dating algorithms
sonar.issue.ignore.block.e7.beginBlockRegexp=calculateCompatibility|matchingAlgorithm
sonar.issue.ignore.block.e7.endBlockRegexp=}
sonar.issue.ignore.block.e7.ruleKey=typescript:S138

# Allow more parameters in dating-specific functions
sonar.issue.ignore.block.e8.beginBlockRegexp=createProfile|updatePreferences|searchProfiles
sonar.issue.ignore.block.e8.endBlockRegexp=}
sonar.issue.ignore.block.e8.ruleKey=typescript:S107

# Custom Quality Profiles

# Branch Coverage Requirements
sonar.coverage.jacoco.xmlReportPaths=angular-frontend/coverage/clover.xml,python-backend/coverage.xml

# Code Smells Severity
sonar.issuesReport.html.enable=true

# Security Rules for Dating Platform
sonar.security.config.file=.sonarqube/security-config.json

# Performance Rules
sonar.performance.config.file=.sonarqube/performance-config.json

# Custom Metrics for Dating Platform
sonar.links.homepage=https://dinner-first.app
sonar.links.ci=https://gitlab.com/dinner-first/dating-platform/-/pipelines
sonar.links.issue=https://gitlab.com/dinner-first/dating-platform/-/issues
sonar.links.scm=https://gitlab.com/dinner-first/dating-platform

# Analysis Parameters
sonar.analysis.mode=publish
sonar.buildString=${CI_COMMIT_SHA}
sonar.projectDate=${CI_COMMIT_TIMESTAMP}

# Branch Analysis Configuration
sonar.branch.name=${CI_COMMIT_REF_NAME}
sonar.pullrequest.key=${CI_MERGE_REQUEST_IID}
sonar.pullrequest.branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
sonar.pullrequest.base=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}

# Scanner Configuration
sonar.scanner.force-deprecated-java-version=false
sonar.log.level=INFO
sonar.verbose=false

# Database Connection (if using external SonarQube DB)
# These would be set via environment variables in production
# sonar.jdbc.url=jdbc:postgresql://sonarqube-postgres:5432/sonarqube
# sonar.jdbc.username=sonarqube
# sonar.jdbc.password=${SONAR_DB_PASSWORD}

# Web Server Configuration
# sonar.web.javaOpts=-Xmx2g -Xms1g
# sonar.web.host=0.0.0.0
# sonar.web.port=9000
# sonar.web.context=/

# ElasticSearch Configuration (for large projects)
# sonar.search.javaOpts=-Xmx1g -Xms1g

# Dating Platform Quality Standards

# Minimum Test Coverage
sonar.coverage.minimum=80

# Maximum Complexity per Function
sonar.complexity.maximum=15

# Maximum Lines per Function
sonar.function.maximum=50

# Maximum Parameters per Function  
sonar.parameters.maximum=7

# Maximum Cognitive Complexity
sonar.cognitive.complexity.maximum=15

# Security Standards for Dating Platform
# Following OWASP Top 10 and dating-specific security concerns

# Privacy Protection Rules
sonar.privacy.data.detection=true
sonar.privacy.pii.detection=true

# Authentication Security
sonar.security.authentication.required=true
sonar.security.session.management=true

# Data Protection
sonar.security.encryption.required=true
sonar.security.sql.injection.detection=true
sonar.security.xss.detection=true

# Dating Platform Specific Security Rules
sonar.dating.photo.encryption=true
sonar.dating.location.anonymization=true
sonar.dating.profile.privacy=true

# Performance Standards for Mobile Dating App
sonar.performance.mobile.optimization=true
sonar.performance.image.optimization=true
sonar.performance.api.response.time.max=200ms

# Accessibility Standards
sonar.accessibility.wcag.level=AA
sonar.accessibility.mobile.compliance=true

# Internationalization
sonar.i18n.compliance=true
sonar.i18n.missing.translations.threshold=5